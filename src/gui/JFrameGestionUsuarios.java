/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import datos.DAORol;
import datos.DAOUsuarios;
import entidades.Rol;
import entidades.Usuario;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Kevin
 */
public class JFrameGestionUsuarios extends javax.swing.JFrame {

    private List<Usuario> listaUsuarios;
    private DefaultTableModel modeloUsuarios;
    private List<Rol> listaRoles;
    /**
     * Creates new form JFrameGestionUsuarios
     */
    public JFrameGestionUsuarios() {
        initComponents();
        cargarUsuarios();
        cargarRoles();
        this.setLocationRelativeTo(null);
    }
    
    //Métodos de carga
    private void cargarUsuarios(){
        DAOUsuarios daoUsuarios = new DAOUsuarios();
        listaUsuarios = daoUsuarios.consultarUsuarios();
        
        actualizarTabla(listaUsuarios);
    }
    
    private void cargarRoles(){
        DAORol daoRol = new DAORol();
        listaRoles = daoRol.consultarRoles();
        
        //Limpiamos la lista para que no se acumule
        comboBoxRol.removeAllItems();
        
        //Nombres de los tramos
        for (Rol r : listaRoles) {
            comboBoxRol.addItem(r.getRol());
        }
    }
    
    private void actualizarTabla(List<Usuario> usuarios) {
        modeloUsuarios = (DefaultTableModel) tablaUsuarios.getModel(); //Casteamos la table porque no es compatible
        modeloUsuarios.setRowCount(0); // Aquí limpiamos la tabla

        for (Usuario u : usuarios) {
            modeloUsuarios.addRow(new Object[] { u.getLogin(), u.getPassword(), u.getRol()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        botonAgregar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        etiquetaUsuarios = new javax.swing.JLabel();
        etiquetaLogin = new javax.swing.JLabel();
        textLogin = new javax.swing.JTextField();
        etiquetaRol = new javax.swing.JLabel();
        etiquetaPass = new javax.swing.JLabel();
        textPass = new javax.swing.JTextField();
        comboBoxRol = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuInicio = new javax.swing.JMenu();
        menuItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Password", "Rol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        etiquetaUsuarios.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        etiquetaUsuarios.setText("Gestionar Usuarios");

        etiquetaLogin.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        etiquetaLogin.setText("Login:");

        textLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textLoginActionPerformed(evt);
            }
        });

        etiquetaRol.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        etiquetaRol.setText("Rol:");

        etiquetaPass.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        etiquetaPass.setText("Password:");

        textPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPassActionPerformed(evt);
            }
        });

        comboBoxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        menuInicio.setText("Inicio");

        menuItemSalir.setText("Salir");
        menuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirActionPerformed(evt);
            }
        });
        menuInicio.add(menuItemSalir);

        jMenuBar1.add(menuInicio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(etiquetaPass, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(etiquetaRol)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxRol, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etiquetaUsuarios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(etiquetaUsuarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaLogin)
                    .addComponent(textLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaPass)
                    .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregar)
                    .addComponent(botonEliminar)
                    .addComponent(comboBoxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaRol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Eventos
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        String login = textLogin.getText().trim();
        String password = textPass.getText().trim();
        String selectedRol = (String) comboBoxRol.getSelectedItem();
        
        if (login.isEmpty() || password.isEmpty() || selectedRol == null) {
            JOptionPane.showMessageDialog(this, 
                    "Todos los campos son obligatorios.", 
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Comparar el objeto rol con el seleccionado
        Rol rol = listaRoles.stream()
                .filter(r -> r.getRol().equals(selectedRol))
                .findFirst()
                .orElse(null);
        
        Usuario nuevoUsuario = new Usuario(login, password, rol.getRol());
        DAOUsuarios daoUsuarios = new DAOUsuarios();
        daoUsuarios.insertarUsuario(nuevoUsuario);

        // Añadimos el usuario a la tabla
        modeloUsuarios.addRow(new Object[] { login , password, rol.getRol() });

        // Vaciamos los campos de texto
        textLogin.setText("");
        textPass.setText("");

        // Mostramos el mensaje de confirmación
        JOptionPane.showMessageDialog(this, 
                "Usuario agregado correctamente.", 
                "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void textLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textLoginActionPerformed

    private void textPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPassActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // Fila
        int filaSeleccionada = tablaUsuarios.getSelectedRow();
        
        // Validar si hay fila seleccionada
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, 
                    "Debes seleccionar una fila para eliminar.", 
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Confirmar la eliminación
        int opcion = JOptionPane.showConfirmDialog(this, 
                "¿Estás seguro de que deseas eliminar este usuario?", 
                "Confirmar eliminación", 
                JOptionPane.YES_NO_OPTION);

        if (opcion == JOptionPane.YES_OPTION) {
            // Cogemos el valor del login de esa fila (login)
            String login = (String) tablaUsuarios.getValueAt(filaSeleccionada, 0); 

            // Cargamos la base de datos para eliminar al usuario
            DAOUsuarios daoUsuarios = new DAOUsuarios();
            daoUsuarios.eliminarUsuario(login);
            
            modeloUsuarios.removeRow(filaSeleccionada);
            
            JOptionPane.showMessageDialog(this, 
                    "Usuario eliminado correctamente.", 
                    "Éxito", JOptionPane.INFORMATION_MESSAGE);
            
            //Preguntar
//            try {
//                daoUsuarios.eliminarUsuario(login);
//                
//            //Eliminar la fila del modelo tabla
//                modeloUsuarios.removeRow(filaSeleccionada);
//
//            // Mostrar mensaje de éxito salvo que haya error
//                JOptionPane.showMessageDialog(this, 
//                    "Usuario eliminado correctamente.", 
//                    "Éxito", JOptionPane.INFORMATION_MESSAGE);
//            } catch (SQLException e){
//                System.err.println("eliminarUsuario: " + e.getMessage());
//                JOptionPane.showMessageDialog(this, 
//                        "No se puede eliminar este usuario porque tiene reservas asociadas.\n" +
//                        "Primero debe eliminar todas las reservas de este usuario.", 
//                        "Error", JOptionPane.ERROR_MESSAGE);
//            }
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void menuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirActionPerformed
        JFrameAdmin newframe = new JFrameAdmin();
        dispose();
        newframe.setVisible(true);
    }//GEN-LAST:event_menuItemSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameGestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameGestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameGestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameGestionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameGestionUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JComboBox<String> comboBoxRol;
    private javax.swing.JLabel etiquetaLogin;
    private javax.swing.JLabel etiquetaPass;
    private javax.swing.JLabel etiquetaRol;
    private javax.swing.JLabel etiquetaUsuarios;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuInicio;
    private javax.swing.JMenuItem menuItemSalir;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField textLogin;
    private javax.swing.JTextField textPass;
    // End of variables declaration//GEN-END:variables
}
